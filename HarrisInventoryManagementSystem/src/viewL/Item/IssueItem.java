/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package viewL.Item;

import DataAccess.DataAccessor;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Malakagl
 */
public class IssueItem extends javax.swing.JFrame {

    /**
     * Creates new form IssueItem
     */
    public IssueItem() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: DoOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtIssueItems = new javax.swing.JTextField();
        txtItemCode = new javax.swing.JTextField();
        comboBoxItems = new javax.swing.JComboBox();
        txtSalesReps = new javax.swing.JTextField();
        comboBoxReps = new javax.swing.JComboBox();
        txtQty = new javax.swing.JTextField();
        txtQtyValue = new javax.swing.JTextField();
        txtDate = new javax.swing.JTextField();
        txtDateValue = new javax.swing.JTextField();
        txtTimeValue = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new JTable();
        btnAdd = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();
        btnIssue = new javax.swing.JButton();
        btnRemove = new javax.swing.JButton();
        txtQty1 = new javax.swing.JTextField();
        txtIssueCodeVal = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(153, 255, 255));

        txtIssueItems.setEditable(false);
        txtIssueItems.setBackground(new java.awt.Color(0, 51, 204));
        txtIssueItems.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        txtIssueItems.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtIssueItems.setText("Issue Items");
        txtIssueItems.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.LOWERED, java.awt.Color.black, null, java.awt.Color.white, java.awt.Color.lightGray));
        txtIssueItems.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIssueItemsActionPerformed(evt);
            }
        });

        txtItemCode.setEditable(false);
        txtItemCode.setBackground(new JPanel().getBackground());
        txtItemCode.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        txtItemCode.setText("Item Code        :");
        txtItemCode.setBorder(null);
        txtItemCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtItemCodeActionPerformed(evt);
            }
        });

        comboBoxItems.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        comboBoxItems.setModel(new javax.swing.DefaultComboBoxModel(getItemList().toArray(new String [getItemList().size()])));

        txtSalesReps.setEditable(false);
        txtSalesReps.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        txtSalesReps.setText("Sales Rep.        :");
        txtSalesReps.setBorder(null);
        txtSalesReps.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSalesRepsActionPerformed(evt);
            }
        });

        comboBoxReps.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        comboBoxReps.setModel(new DefaultComboBoxModel(getSalesRepsList().toArray(new String[getSalesRepsList().size()])));
        comboBoxReps.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxRepsActionPerformed(evt);
            }
        });

        txtQty.setEditable(false);
        txtQty.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        txtQty.setText("Quantity          :");
        txtQty.setBorder(null);

        txtQtyValue.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        txtQtyValue.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        txtDate.setEditable(false);
        txtDate.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        txtDate.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtDate.setText("Date & Time:");
        txtDate.setBorder(null);
        txtDate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDateActionPerformed(evt);
            }
        });

        txtDateValue.setEditable(false);
        txtDateValue.setBackground(new java.awt.Color(240, 240, 240));
        txtDateValue.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        txtDateValue.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtDateValue.setBorder(null);
        txtDateValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtDateValueActionPerformed(evt);
            }
        });

        txtTimeValue.setEditable(false);
        txtTimeValue.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        txtTimeValue.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtTimeValue.setBorder(null);
        txtTimeValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtTimeValueActionPerformed(evt);
            }
        });

        table.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        table.setModel(new DefaultTableModel(
            new Object [][] {} ,
            new String [] {
                "Date", "Sales Rep.", "Item Code", "Quantity"
            }
        ));
        jScrollPane1.setViewportView(table);

        btnAdd.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btnAdd.setText("ADD");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnCancel.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        btnIssue.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btnIssue.setText("Issue");

        btnRemove.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        btnRemove.setText("Remove Selected");
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        txtQty1.setEditable(false);
        txtQty1.setFont(new java.awt.Font("Times New Roman", 1, 14)); // NOI18N
        txtQty1.setText("Issue Code       :");
        txtQty1.setBorder(null);

        txtIssueCodeVal.setEditable(false);
        txtIssueCodeVal.setBackground(new java.awt.Color(240, 240, 240));
        txtIssueCodeVal.setFont(new java.awt.Font("Times New Roman", 0, 12)); // NOI18N
        txtIssueCodeVal.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtIssueCodeVal.setBorder(null);
        getItemCode();
        txtIssueCodeVal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIssueCodeValActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(txtIssueItems)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtQty1, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtIssueCodeVal, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE)
                                .addGap(79, 79, 79)
                                .addComponent(btnAdd))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtItemCode, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(comboBoxItems, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtSalesReps, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(comboBoxReps, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(txtQty, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtQtyValue)))
                                .addGap(29, 29, 29)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtDate, javax.swing.GroupLayout.DEFAULT_SIZE, 116, Short.MAX_VALUE)
                                    .addComponent(txtDateValue)
                                    .addComponent(txtTimeValue))))
                        .addContainerGap(39, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnRemove)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnIssue)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancel)
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(txtIssueItems, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtItemCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(comboBoxItems, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(comboBoxReps, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtSalesReps, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtDateValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txtQtyValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtQty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtTimeValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(txtQty1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtIssueCodeVal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancel)
                    .addComponent(btnRemove)
                    .addComponent(btnIssue))
                .addContainerGap())
        );

        showTime();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtIssueItemsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIssueItemsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIssueItemsActionPerformed

    private void comboBoxRepsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxRepsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboBoxRepsActionPerformed

    private void txtItemCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtItemCodeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtItemCodeActionPerformed

    private void txtDateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDateActionPerformed

    private void txtDateValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtDateValueActionPerformed
    }//GEN-LAST:event_txtDateValueActionPerformed

    private void txtSalesRepsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSalesRepsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSalesRepsActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        showTime();

        String salesRep = (String) comboBoxReps.getSelectedItem();
        String itemCode = (String) comboBoxItems.getSelectedItem();
        String qty = txtQtyValue.getText();
        String date = txtDateValue.getText() + " " + txtTimeValue.getText();

        if (salesRep.equals("")) {
            JOptionPane.showMessageDialog(this, "Please choose a Sales Representative");
        } else if (itemCode.equals("")) {
            JOptionPane.showMessageDialog(this, "Please choose an item code");
        } else if (qty.equals("")) {
            JOptionPane.showMessageDialog(this, "Please choose a quantity");
        } else {
            DefaultTableModel model = (DefaultTableModel) table.getModel();
            String[] data = new String[]{date, salesRep, itemCode, qty};
            model.addRow(data);
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void txtTimeValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtTimeValueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtTimeValueActionPerformed

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
       DefaultTableModel model = (DefaultTableModel) table.getModel(); 
       while(table.getSelectedRow() != -1){
           model.removeRow(table.getSelectedRow()); 
       }
    }//GEN-LAST:event_btnRemoveActionPerformed

    private void txtIssueCodeValActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIssueCodeValActionPerformed
        DataAccessor da = new DataAccessor();
        da.getIssueCode();
    }//GEN-LAST:event_txtIssueCodeValActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         *
         try {
         for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
         if ("Nimbus".equals(info.getName())) {
         javax.swing.UIManager.setLookAndFeel(info.getClassName());
         break;
         }
         }
         } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
         java.util.logging.Logger.getLogger(IssueItem.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
         }
         //</editor-fold>*.

         /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new IssueItem().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnIssue;
    private javax.swing.JButton btnRemove;
    private javax.swing.JComboBox comboBoxItems;
    private javax.swing.JComboBox comboBoxReps;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable table;
    private javax.swing.JTextField txtDate;
    private javax.swing.JTextField txtDateValue;
    private javax.swing.JTextField txtIssueCodeVal;
    private javax.swing.JTextField txtIssueItems;
    private javax.swing.JTextField txtItemCode;
    private javax.swing.JTextField txtQty;
    private javax.swing.JTextField txtQty1;
    private javax.swing.JTextField txtQtyValue;
    private javax.swing.JTextField txtSalesReps;
    private javax.swing.JTextField txtTimeValue;
    // End of variables declaration//GEN-END:variables

    private ArrayList<String> getItemList() {
        ArrayList<String> items;
        DataAccessor da = new DataAccessor();
        items = da.getItemList();
        return items;
    }

    private ArrayList<String> getSalesRepsList() {
        ArrayList<String> reps;
        DataAccessor da = new DataAccessor();
        reps = da.getRepList();
        return reps;
    }

    private void showTime() {
        SimpleDateFormat today = new SimpleDateFormat("dd MMM yyyy hh:mm aaa");
        String date = today.format(new Date());
        txtDateValue.setText(date.substring(0, 11));
        txtTimeValue.setText(date.substring(12, 20));
    }

    private void getItemCode() {
        
    }
}
